char *upcase(char *);
//FILE *outfile(char []);
void convert_children(FFamily*, int*, int*, int*, int*);
void open_error(int, char *);
void count(Familyfile *, Totals *,int);
int  choosefam(Person [],Nuclear [],int [], int,Familyfile *,int);
void printgood(FFamily *);
int transmit_sing(int,int, int, int, FFamily *,Totals *, int);
int transmit_pair(int, int, int, FFamily *,Totals *,int);
int  sqval(int, int);
void printij(int,int,int,int,int,int,int,FILE *,int,int,int);
int  equal(int,int,int,int,int,int,int,int,int,Totals *);
void homoz(int,int,int,int,int,int,int,int,int,Totals *);
void noshare(int,int,int,int,int,int,int,int,int,Totals *);
void share(int, int, int, int, int, int, int, int, int, Totals*);
void ytot(Totals *,FILE *);
void xtot(Totals *,FILE *);
void report(Totals *,int,string);//char []);
char *strsave(const char *);
Np *install(const char *, char *);
Np *lookup(const char *);
Np *uninstall(char *);
int hash(const char *);
void clearhash();
int nucfam(Familyfile *,Person [], int,int);
void incre_h(Totals *,int,int);
void incre_y(Totals *,int,int);
void table_sing(Totals *);//, FILE *);
void table_pair(Totals *);//, FILE *);
void printx(Totals *,int,int,int,int,int,int,int,int,int,int,int,FILE *,int);
int share2(int, int, FFamily *, Totals *,int);
void missing_sing(FFamily *,int, Totals *);//FILE *, int,Totals *);
void missing_pair(FFamily *, int,Totals *);
char *get_date(int);
void clean_all();
